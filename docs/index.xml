<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Techree</title>
    <link>https://www.techree.net/</link>
    <description>Recent content on Techree</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 Mar 2019 16:49:14 +0900</lastBuildDate>
    
	<atom:link href="https://www.techree.net/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SketchのAutoLayout機能</title>
      <link>https://www.techree.net/posts/about-auto-layout/</link>
      <pubDate>Wed, 13 Mar 2019 16:49:14 +0900</pubDate>
      
      <guid>https://www.techree.net/posts/about-auto-layout/</guid>
      <description>SketchでAutoLayoutを使えるようにするプラグインAnima ToolKitを使ってみました。
AutoLayoutとは何か？ 制約を設定する事でビューを自動的に計算してリサイズしたり、位置を調整したりする機能。優先度を設定することによって、どのパーツを優先的にリサイズしたり、非表示にしたりするか決める事ができます。
AutoLayoutはStoryboardでビューに設定するのが分かりやすいが、コード上でも設定する事が可能です。
どういう動きをするのか AutoLayoutを使うことによって以下のような動きをさせることができます
 オブジェクトのサイズを他のものに合わせてリサイズする オブジェクトの位置を他のオブジェクトと合わせる オブジェクトを整列させることができる  Sketch Pluginを使ってAutoLayoutのサンプルを作って見た。これは、レスポンシブでもイメージしやすいhttps://t.co/cmgHrqt5gG pic.twitter.com/iWHwKktE2Q
&amp;mdash; nagamy (@nagami_hiro) January 18, 2019 
まとめ AutoLayout機能はXcodeでも使うことができる機能です。この機能を理解することで、複数の画面サイズに合わせてウェブやアプリのデザインを効率よく最適な形にしていくことができるようになるでしょう。</description>
    </item>
    
    <item>
      <title>About Actor Model</title>
      <link>https://www.techree.net/posts/about-actor-model/</link>
      <pubDate>Sat, 09 Mar 2019 08:55:36 +0900</pubDate>
      
      <guid>https://www.techree.net/posts/about-actor-model/</guid>
      <description>Actorモデルとは？ インフラ環境などでよく使われる並列処理を実現する方法の１つです。
1973年にカール・ヒューイット氏によって発表されました。オブジェクト指向が「全てのものはオブジェクト指向である」というのに対し、アクターモデルは「全てのものはアクターである」という哲学に基づいて設計されています。
「すべてのものはアクターである」とは アクターとは、メッセージパッシングによって処理の送受信を行うオブジェクトのことを言います。アクターモデルは、いくつものアクターで構成されます。
アクター同士のやり取りは、基本的にメッセージパッシングで行われるためやり取りの到着順は保証されない特徴があります。その分、スケールや大量の処理を素早く行うことができるというメリットもあります。
アクターモデルの並列性 オブジェクト指向は１つの処理を逐次的に行う事に対して、アクターモデルはメッセージパッシングで処理の送受信を行うため、他の処理を待つことがありません。そのため、アクターモデルは並列的な分散処理と言われています。</description>
    </item>
    
  </channel>
</rss>